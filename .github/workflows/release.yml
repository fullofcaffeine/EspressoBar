name: Release

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches:
      - main
  # Fallback: allow manual triggering for testing
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build base application
        run: npm run build

      # Download artifacts from the CI/CD pipeline build job
      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ci-cd.yml
          workflow_conclusion: success
          path: dist/
          search_artifacts: true

      - name: List downloaded artifacts (debug)
        run: |
          echo "Contents of dist/ directory:"
          ls -la dist/ || echo "dist/ directory does not exist"
          echo "Searching for all build artifacts:"
          find . -name "*.dmg" -o -name "*.zip" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.tar.gz" | head -20
          echo "Flattening artifacts to dist/ root:"
          mkdir -p dist
          find . -name "*.dmg" -o -name "*.zip" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.tar.gz" | xargs -I {} mv {} dist/ 2>/dev/null || true
          echo "Final dist/ contents:"
          ls -la dist/

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running semantic-release..."
          echo "Current branch: $(git branch --show-current)"
          echo "Latest commits:"
          git log --oneline -5
          npx semantic-release --debug 
