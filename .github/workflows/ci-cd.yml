name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type checking
      run: npm run typecheck

    - name: Run linting
      run: npm run lint

    - name: Setup headless display for Electron
      uses: pyvista/setup-headless-display-action@v3

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        # Additional environment variables for headless Electron
        DISPLAY: :99.0

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  build:
    needs: test
    if: github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    # macOS builds
    - name: Build macOS
      if: matrix.os == 'macos-latest'
      run: npm run build:mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Windows builds  
    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: npm run build:win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Linux builds
    - name: Build Linux
      if: matrix.os == 'ubuntu-latest'
      run: npm run build:linux
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: espressobar-${{ matrix.os }}
        path: |
          dist/*.dmg
          dist/*.zip
          dist/*.exe
          dist/*.AppImage
          dist/*.deb
          dist/*.tar.gz
        retention-days: 90

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Release binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/espressobar-macos-latest/*
          artifacts/espressobar-windows-latest/*
          artifacts/espressobar-ubuntu-latest/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
